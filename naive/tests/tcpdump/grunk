<GraphRipFunction> removing unused functions
<GraphRipFunction> removing unused main blocks
<GraphRipFunction> tryRemoveBranchUses
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
Both are bad blocks in Br.. That's f.d
<GraphRipFunction> tryRemovePhiNodeUses

; Function Attrs: noreturn nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #4 !dbg !236 {
  %buf.i = alloca %struct.stat, align 8
  %dlts.i = alloca i32*, align 8
  %devlist.i22 = alloca %struct.pcap_if*, align 8
  %end.i = alloca i8*, align 8
  %devlist.i = alloca %struct.pcap_if*, align 8
  %ebuf.i = alloca [256 x i8], align 16
  tail call void @llvm.dbg.declare(metadata [256 x i8]* %ebuf.i, metadata !490, metadata !31447), !dbg !31480
  tail call void @llvm.dbg.declare(metadata [256 x i8]* %ebuf.i, metadata !440, metadata !31447), !dbg !31486
  %localnet = alloca i32, align 4
  %netmask = alloca i32, align 4
  %fcode = alloca %struct.bpf_program, align 8
  %dumpinfo = alloca %struct.dump_info, align 8
  %ebuf = alloca [256 x i8], align 16
  %VFileLine = alloca [4097 x i8], align 16
  %end = alloca i8*, align 8
  %devlist = alloca %struct.pcap_if*, align 8
  %Ndo = alloca %struct.netdissect_options, align 8
  tail call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !240, metadata !31447), !dbg !31489
  tail call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !241, metadata !31447), !dbg !31490
  %1 = bitcast i32* %localnet to i8*, !dbg !31491
  call void @llvm.lifetime.start(i64 4, i8* %1) #5, !dbg !31491
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !245, metadata !31447), !dbg !31492
  store i32 0, i32* %localnet, align 4, !dbg !31492, !tbaa !31493
  %2 = bitcast i32* %netmask to i8*, !dbg !31491
  call void @llvm.lifetime.start(i64 4, i8* %2) #5, !dbg !31494
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !246, metadata !31447), !dbg !31496
  store i32 0, i32* %netmask, align 4, !dbg !31496, !tbaa !31493
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !247, metadata !31447), !dbg !31497
  %3 = bitcast %struct.bpf_program* %fcode to i8*, !dbg !31498
  call void @llvm.lifetime.start(i64 16, i8* %3) #5, !dbg !31498
  %4 = bitcast %struct.dump_info* %dumpinfo to i8*, !dbg !31499
  call void @llvm.lifetime.start(i64 32, i8* %4) #5, !dbg !31499
  %5 = getelementptr inbounds [256 x i8], [256 x i8]* %ebuf, i64 0, i64 0, !dbg !31500
  call void @llvm.lifetime.start(i64 256, i8* %5) #5, !dbg !31500
  tail call void @llvm.dbg.declare(metadata [256 x i8]* %ebuf, metadata !280, metadata !31447), !dbg !31501
  %6 = getelementptr inbounds [4097 x i8], [4097 x i8]* %VFileLine, i64 0, i64 0, !dbg !31502
  call void @llvm.lifetime.start(i64 4097, i8* %6) #5, !dbg !31502
  tail call void @llvm.dbg.declare(metadata [4097 x i8]* %VFileLine, metadata !284, metadata !31447), !dbg !31503
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !288, metadata !31447), !dbg !31504
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !289, metadata !31447), !dbg !31505
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !290, metadata !31447), !dbg !31506
  %7 = bitcast i8** %end to i8*, !dbg !31507
  call void @llvm.lifetime.start(i64 8, i8* %7) #5, !dbg !31507
  %8 = bitcast %struct.pcap_if** %devlist to i8*, !dbg !31508
  call void @llvm.lifetime.start(i64 8, i8* %8) #5, !dbg !31508
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !380, metadata !31447), !dbg !31509
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !381, metadata !31447), !dbg !31510
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !382, metadata !31447), !dbg !31511
  %9 = bitcast %struct.netdissect_options* %Ndo to i8*, !dbg !31512
  call void @llvm.lifetime.start(i64 176, i8* %9) #5, !dbg !31512
  tail call void @llvm.dbg.value(metadata %struct.netdissect_options* %Ndo, i64 0, metadata !384, metadata !31447), !dbg !31513
  %10 = call i32 @nd_init(i8* %5, i64 256) #5, !dbg !31514
  %11 = icmp eq i32 0, -1, !dbg !31516
  br label %12

; <label>:12                                      ; preds = %0
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 176, i32 8, i1 false), !dbg !31517
  call void @llvm.dbg.value(metadata %struct.netdissect_options* %Ndo, i64 0, metadata !383, metadata !31470), !dbg !31518
  call void @ndo_set_function_pointers(%struct.netdissect_options* nonnull %Ndo) #5, !dbg !31519
  %13 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 24, !dbg !31520
  store i32 262144, i32* %13, align 4, !dbg !31521, !tbaa !31522
  call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !242, metadata !31447), !dbg !31524
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !251, metadata !31447), !dbg !31525
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !249, metadata !31447), !dbg !31526
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !252, metadata !31447), !dbg !31527
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !253, metadata !31447), !dbg !31528
  call void @llvm.dbg.value(metadata %struct._IO_FILE* null, i64 0, metadata !324, metadata !31447), !dbg !31529
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !254, metadata !31447), !dbg !31530
  call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !260, metadata !31447), !dbg !31531
  %14 = load i8*, i8** %argv, align 8, !dbg !31532, !tbaa !31456
  %15 = call i8* @strrchr(i8* %14, i32 47) #15, !dbg !31534
  call void @llvm.dbg.value(metadata i8* %15, i64 0, metadata !248, metadata !31447), !dbg !31535
  %16 = icmp eq i8* %15, null, !dbg !31536
  %17 = getelementptr inbounds i8, i8* %15, i64 1, !dbg !31537
  %. = select i1 %16, i8* %14, i8* %17, !dbg !31538
  %.555 = select i1 %16, i8* %14, i8* %17, !dbg !31538
  store i8* %., i8** @program_name, align 8, !dbg !31539, !tbaa !31456
  %18 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 18, !dbg !31540
  store i8* %.555, i8** %18, align 8, !dbg !31541
  %19 = call i32 @abort_on_misalignment(i8* %5, i64 256) #5, !dbg !31542
  %20 = icmp slt i32 0, 0, !dbg !31544
  br label %.preheader47

.preheader47:                                     ; preds = %12
  %21 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 13, !dbg !31545
  %22 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 0, !dbg !31547
  %23 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 1, !dbg !31548
  %24 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 19, !dbg !31549
  %25 = bitcast i8** %24 to i64*, !dbg !31550
  %26 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 2, !dbg !31551
  %27 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 14, !dbg !31552
  %28 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 3, !dbg !31553
  %29 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 22, !dbg !31554
  %30 = bitcast i8** %29 to i64*, !dbg !31555
  %31 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 4, !dbg !31556
  %32 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 5, !dbg !31557
  %33 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 6, !dbg !31558
  %34 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 16, !dbg !31559
  %35 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 7, !dbg !31560
  %36 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 8, !dbg !31561
  %37 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 23, !dbg !31562
  %38 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 9, !dbg !31564
  %39 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 10, !dbg !31565
  %40 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 11, !dbg !31566
  %41 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 12, !dbg !31567
  %42 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 15, !dbg !31568
  %43 = getelementptr inbounds %struct.netdissect_options, %struct.netdissect_options* %Ndo, i64 0, i32 17, !dbg !31569
  br label %.backedge, !dbg !31570

.backedge:                                        ; preds = %.backedge.backedge, %.preheader47
  %WFileName.0 = phi i8* [ null, %.preheader47 ]
  %VFileName.0 = phi i8* [ null, %.preheader47 ]
  %username.0 = phi i8* [ null, %.preheader47 ]
  %RFileName.0 = phi i8* [ null, %.preheader47 ]
  %device.0 = phi i8* [ null, %.preheader47 ]
  %Oflag.0 = phi i32 [ 1, %.preheader47 ]
  %yflag_dlt.0 = phi i32 [ -1, %.preheader47 ]
  %yflag_dlt_name.0 = phi i8* [ null, %.preheader47 ]
  %infile.0 = phi i8* [ null, %.preheader47 ]
  %cnt.0 = phi i32 [ -1, %.preheader47 ]
  %44 = call i32 @getopt_long(i32 %argc, i8** %argv, i8* nonnull getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), %struct.option* nonnull getelementptr inbounds ([22 x %struct.option], [22 x %struct.option]* @longopts, i64 0, i64 0), i32* null) #5, !dbg !31570
  call void @llvm.dbg.value(metadata i32 %44, i64 0, metadata !243, metadata !31447), !dbg !31571
  switch i32 %44, label %345 [
    i32 -1, label %346
    i32 97, label %.backedge.backedge
    i32 65, label %45
    i32 98, label %48
    i32 66, label %51
    i32 99, label %59
    i32 67, label %65
    i32 100, label %73
    i32 68, label %76
    i32 76, label %79
    i32 101, label %82
    i32 69, label %85
    i32 102, label %87
    i32 70, label %90
    i32 71, label %92
    i32 104, label %106
    i32 72, label %107
    i32 105, label %110
    i32 73, label %112
    i32 106, label %115
    i32 74, label %121
    i32 108, label %124
    i32 75, label %126
    i32 109, label %129
    i32 77, label %144
    i32 110, label %146
    i32 78, label %149
    i32 79, label %152
    i32 112, label %153
    i32 113, label %156
    i32 81, label %161
    i32 114, label %178
    i32 115, label %180
    i32 83, label %196
    i32 116, label %199
    i32 84, label %202
    i32 117, label %289
    i32 85, label %292
    i32 118, label %295
    i32 86, label %298
    i32 119, label %300
    i32 87, label %302
    i32 120, label %315
    i32 88, label %320
    i32 121, label %325
    i32 122, label %330
    i32 90, label %332
    i32 35, label %334
    i32 128, label %335
    i32 129, label %336
    i32 130, label %344
  ], !dbg !31572

; <label>:45                                      ; preds = %.backedge
  %46 = load i32, i32* %21, align 4, !dbg !31573, !tbaa !31574
  %47 = add nsw i32 %46, 1, !dbg !31573
  store i32 %47, i32* %21, align 4, !dbg !31573, !tbaa !31574
  br label %.backedge.backedge, !dbg !31575

; <label>:48                                      ; preds = %.backedge
  %49 = load i32, i32* %22, align 8, !dbg !31576, !tbaa !31577
  %50 = add nsw i32 %49, 1, !dbg !31576
  store i32 %50, i32* %22, align 8, !dbg !31576, !tbaa !31577
  br label %.backedge.backedge, !dbg !31578

; <label>:51                                      ; preds = %.backedge
  %52 = load i8*, i8** @optarg, align 8, !dbg !31579, !tbaa !31456
  call void @llvm.dbg.value(metadata i8* %52, i64 0, metadata !419, metadata !31447) #5, !dbg !31580
  %53 = call i64 @strtol(i8* nocapture nonnull %52, i8** null, i32 10) #5, !dbg !31582
  %54 = trunc i64 %53 to i32, !dbg !31583
  %55 = shl nsw i32 %54, 10, !dbg !31584
  store i32 %55, i32* @Bflag, align 4, !dbg !31585, !tbaa !31493
  %56 = icmp slt i32 %54, 1, !dbg !31586
  br i1 %56, label %57, label %.backedge.backedge, !dbg !31588

; <label>:57                                      ; preds = %51
  %58 = load i8*, i8** @optarg, align 8, !dbg !31589, !tbaa !31456
  call void (i8*, ...) @error(i8* nonnull getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* %58) #16, !dbg !31590
  unreachable, !dbg !31590

; <label>:59                                      ; preds = %.backedge
  %60 = load i8*, i8** @optarg, align 8, !dbg !31591, !tbaa !31456
  call void @llvm.dbg.value(metadata i8* %60, i64 0, metadata !419, metadata !31447) #5, !dbg !31592
  %61 = call i64 @strtol(i8* nocapture nonnull %60, i8** null, i32 10) #5, !dbg !31594
  %62 = trunc i64 %61 to i32, !dbg !31595
  call void @llvm.dbg.value(metadata i32 %62, i64 0, metadata !242, metadata !31447), !dbg !31524
  %63 = icmp slt i32 %62, 1, !dbg !31596
  br i1 %63, label %64, label %.backedge.backedge, !dbg !31598

; <label>:64                                      ; preds = %59
  %.lcssa1062 = phi i8* [ %60, %59 ]
  call void (i8*, ...) @error(i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i8* %.lcssa1062) #16, !dbg !31599
  unreachable, !dbg !31599

; <label>:65                                      ; preds = %.backedge
  %66 = load i8*, i8** @optarg, align 8, !dbg !31600, !tbaa !31456
  call void @llvm.dbg.value(metadata i8* %66, i64 0, metadata !419, metadata !31447) #5, !dbg !31601
  %67 = call i64 @strtol(i8* nocapture nonnull %66, i8** null, i32 10) #5, !dbg !31603
  %68 = trunc i64 %67 to i32, !dbg !31604
  %sext = mul i64 %67, 4294967296000000, !dbg !31605
  %69 = ashr exact i64 %sext, 32, !dbg !31605
  store i64 %69, i64* @Cflag, align 8, !dbg !31606, !tbaa !31607
  %70 = icmp slt i32 %68, 1, !dbg !31609
  br i1 %70, label %71, label %.backedge.backedge, !dbg !31611

; <label>:71                                      ; preds = %65
  %72 = load i8*, i8** @optarg, align 8, !dbg !31612, !tbaa !31456
  call void (i8*, ...) @error(i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i8* %72) #16, !dbg !31613
  unreachable, !dbg !31613

; <label>:73                                      ; preds = %.backedge
  %74 = load i32, i32* @dflag, align 4, !dbg !31614, !tbaa !31493
  %75 = add nsw i32 %74, 1, !dbg !31614
  store i32 %75, i32* @dflag, align 4, !dbg !31614, !tbaa !31493
  br label %.backedge.backedge, !dbg !31615

; <label>:76                                      ; preds = %.backedge
  %77 = load i32, i32* @Dflag, align 4, !dbg !31616, !tbaa !31493
  %78 = add nsw i32 %77, 1, !dbg !31616
  store i32 %78, i32* @Dflag, align 4, !dbg !31616, !tbaa !31493
  br label %.backedge.backedge, !dbg !31617

; <label>:79                                      ; preds = %.backedge
  %80 = load i32, i32* @Lflag, align 4, !dbg !31618, !tbaa !31493
  %81 = add nsw i32 %80, 1, !dbg !31618
  store i32 %81, i32* @Lflag, align 4, !dbg !31618, !tbaa !31493
  br label %.backedge.backedge, !dbg !31619

; <label>:82                                      ; preds = %.backedge
  %83 = load i32, i32* %23, align 4, !dbg !31620, !tbaa !31621
  %84 = add nsw i32 %83, 1, !dbg !31620
  store i32 %84, i32* %23, align 4, !dbg !31620, !tbaa !31621
  br label %.backedge.backedge, !dbg !31622

; <label>:85                                      ; preds = %.backedge
  call void (i8*, ...) @warning(i8* nonnull getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0)), !dbg !31623
  %86 = load i64, i64* bitcast (i8** @optarg to i64*), align 8, !dbg !31624, !tbaa !31456
  store i64 %86, i64* %25, align 8, !dbg !31550, !tbaa !31625
  br label %.backedge.backedge, !dbg !31626

; <label>:87                                      ; preds = %.backedge
  %88 = load i32, i32* %26, align 8, !dbg !31627, !tbaa !31628
  %89 = add nsw i32 %88, 1, !dbg !31627
  store i32 %89, i32* %26, align 8, !dbg !31627, !tbaa !31628
  br label %.backedge.backedge, !dbg !31629

; <label>:90                                      ; preds = %.backedge
  %91 = load i8*, i8** @optarg, align 8, !dbg !31630, !tbaa !31456
  call void @llvm.dbg.value(metadata i8* %91, i64 0, metadata !249, metadata !31447), !dbg !31526
  br label %.backedge.backedge, !dbg !31631

; <label>:92                                      ; preds = %.backedge
  %93 = load i8*, i8** @optarg, align 8, !dbg !31632, !tbaa !31456
  call void @llvm.dbg.value(metadata i8* %93, i64 0, metadata !419, metadata !31447) #5, !dbg !31633
  %94 = call i64 @strtol(i8* nocapture nonnull %93, i8** null, i32 10) #5, !dbg !31635
  %95 = trunc i64 %94 to i32, !dbg !31636
  store i32 %95, i32* @Gflag, align 4, !dbg !31637, !tbaa !31493
  %96 = icmp slt i32 %95, 0, !dbg !31638
  br i1 %96, label %97, label %99, !dbg !31640

; <label>:97                                      ; preds = %92
  %98 = load i8*, i8** @optarg, align 8, !dbg !31641, !tbaa !31456
  call void (i8*, ...) @error(i8* nonnull getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i8* %98) #16, !dbg !31642
  unreachable, !dbg !31642

; <label>:99                                      ; preds = %92
  store i32 0, i32* @Gflag_count, align 4, !dbg !31643, !tbaa !31493
  %100 = call i64 @time(i64* null) #5, !dbg !31644
  store i64 %100, i64* @Gflag_time, align 8, !dbg !31646, !tbaa !31607
  %101 = icmp eq i64 %100, -1, !dbg !31647
  br i1 %101, label %102, label %.backedge.backedge, !dbg !31648

; <label>:102                                     ; preds = %99
  %103 = tail call i32* @__errno_location() #1, !dbg !31649
  %104 = load i32, i32* %103, align 4, !dbg !31649, !tbaa !31493
  %105 = call i8* @pcap_strerror(i32 %104) #5, !dbg !31651
  call void (i8*, ...) @error(i8* nonnull getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i8* %105) #16, !dbg !31653
  unreachable, !dbg !31653

; <label>:106                                     ; preds = %.backedge
  call fastcc void @print_usage(), !dbg !31654
  call fastcc void @exit_tcpdump(i32 0) #16, !dbg !31655
  unreachable, !dbg !31655

; <label>:107                                     ; preds = %.backedge
  %108 = load i32, i32* %27, align 8, !dbg !31656, !tbaa !31657
  %109 = add nsw i32 %108, 1, !dbg !31656
  store i32 %109, i32* %27, align 8, !dbg !31656, !tbaa !31657
  br label %.backedge.backedge, !dbg !31658

; <label>:110                                     ; preds = %.backedge
  %111 = load i8*, i8** @optarg, align 8, !dbg !31659, !tbaa !31456
  call void @llvm.dbg.value(metadata i8* %111, i64 0, metadata !251, metadata !31447), !dbg !31525
  br label %.backedge.backedge, !dbg !31660

; <label>:112                                     ; preds = %.backedge
  %113 = load i32, i32* @Iflag, align 4, !dbg !31661, !tbaa !31493
  %114 = add nsw i32 %113, 1, !dbg !31661
  store i32 %114, i32* @Iflag, align 4, !dbg !31661, !tbaa !31493
  br label %.backedge.backedge, !dbg !31662

; <label>:115                                     ; preds = %.backedge
  %116 = load i8*, i8** @optarg, align 8, !dbg !31663, !tbaa !31456
  %117 = call i32 @pcap_tstamp_type_name_to_val(i8* %116) #5, !dbg !31664
  store i32 %117, i32* @jflag, align 4, !dbg !31665, !tbaa !31493
  %118 = icmp slt i32 %117, 0, !dbg !31666
  br i1 %118, label %119, label %.backedge.backedge, !dbg !31668

; <label>:119                                     ; preds = %115
  %120 = load i8*, i8** @optarg, align 8, !dbg !31669, !tbaa !31456
  call void (i8*, ...) @error(i8* nonnull getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %120) #16, !dbg !31670
  unreachable, !dbg !31670

; <label>:121                                     ; preds = %.backedge
  %122 = load i32, i32* @Jflag, align 4, !dbg !31671, !tbaa !31493
  %123 = add nsw i32 %122, 1, !dbg !31671
  store i32 %123, i32* @Jflag, align 4, !dbg !31671, !tbaa !31493
  br label %.backedge.backedge, !dbg !31672

; <label>:124                                     ; preds = %.backedge
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !31673, !tbaa !31456
  call void @setlinebuf(%struct._IO_FILE* %125) #5, !dbg !31674
  br label %.backedge.backedge, !dbg !31675

; <label>:126                                     ; preds = %.backedge
  %127 = load i32, i32* %28, align 4, !dbg !31676, !tbaa !31677
  %128 = add nsw i32 %127, 1, !dbg !31676
  store i32 %128, i32* %28, align 4, !dbg !31676, !tbaa !31677
  br label %.backedge.backedge, !dbg !31678

; <label>:129                                     ; preds = %.backedge
  %130 = call i32 @nd_have_smi_support() #5, !dbg !31679
  %131 = icmp eq i32 0, 0, !dbg !31679
  br i1 %131, label %137, label %132, !dbg !31681

; <label>:132                                     ; preds = %129
  %133 = load i8*, i8** @optarg, align 8, !dbg !31682, !tbaa !31456
  %134 = call i32 @nd_load_smi_module(i8* %133, i8* %5, i64 256) #5, !dbg !31685
  %135 = icmp eq i32 -1, -1, !dbg !31686
  br i1 %135, label %136, label %.backedge.backedge, !dbg !31687

; <label>:136                                     ; preds = %132
  call void (i8*, ...) @error(i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* %5) #16, !dbg !31688
  unreachable, !dbg !31688

; <label>:137                                     ; preds = %129
  %138 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !31689, !tbaa !31456
  %139 = load i8*, i8** @program_name, align 8, !dbg !31691, !tbaa !31456
  %140 = load i8*, i8** @optarg, align 8, !dbg !31692, !tbaa !31456
  %141 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %138, i8* nonnull getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0), i8* %139, i8* %140) #17, !dbg !31693
  %142 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !31694, !tbaa !31456
  %143 = call i64 @fwrite(i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i64 20, i64 1, %struct._IO_FILE* %142) #17, !dbg !31695
  br label %.backedge.backedge

; <label>:144                                     ; preds = %.backedge
  call void (i8*, ...) @warning(i8* nonnull getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0)), !dbg !31696
  %145 = load i64, i64* bitcast (i8** @optarg to i64*), align 8, !dbg !31697, !tbaa !31456
  store i64 %145, i64* %30, align 8, !dbg !31555, !tbaa !31698
  br label %.backedge.backedge, !dbg !31699

; <label>:146                                     ; preds = %.backedge
  %147 = load i32, i32* %31, align 8, !dbg !31700, !tbaa !31701
  %148 = add nsw i32 %147, 1, !dbg !31700
  store i32 %148, i32* %31, align 8, !dbg !31700, !tbaa !31701
  br label %.backedge.backedge, !dbg !31702

; <label>:149                                     ; preds = %.backedge
  %150 = load i32, i32* %32, align 4, !dbg !31703, !tbaa !31704
  %151 = add nsw i32 %150, 1, !dbg !31703
  store i32 %151, i32* %32, align 4, !dbg !31703, !tbaa !31704
  br label %.backedge.backedge, !dbg !31705

; <label>:152                                     ; preds = %.backedge
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !380, metadata !31447), !dbg !31509
  br label %.backedge.backedge, !dbg !31706

; <label>:153                                     ; preds = %.backedge
  %154 = load i32, i32* @pflag, align 4, !dbg !31707, !tbaa !31493
  %155 = add nsw i32 %154, 1, !dbg !31707
  store i32 %155, i32* @pflag, align 4, !dbg !31707, !tbaa !31493
  br label %.backedge.backedge, !dbg !31708

; <label>:156                                     ; preds = %.backedge
  %157 = load i32, i32* %33, align 8, !dbg !31709, !tbaa !31710
  %158 = add nsw i32 %157, 1, !dbg !31709
  store i32 %158, i32* %33, align 8, !dbg !31709, !tbaa !31710
  %159 = load i32, i32* %34, align 8, !dbg !31711, !tbaa !31712
  %160 = add nsw i32 %159, 1, !dbg !31711
  store i32 %160, i32* %34, align 8, !dbg !31711, !tbaa !31712
  br label %.backedge.backedge, !dbg !31713

; <label>:161                                     ; preds = %.backedge
  %162 = load i8*, i8** @optarg, align 8, !dbg !31714, !tbaa !31456
  %163 = call i32 @ascii_strcasecmp(i8* %162, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0)) #5, !dbg !31716
  %164 = icmp eq i32 %163, 0, !dbg !31717
  br i1 %164, label %165, label %166, !dbg !31718

; <label>:165                                     ; preds = %161
  store i32 1, i32* @Qflag, align 4, !dbg !31719, !tbaa !31493
  br label %.backedge.backedge, !dbg !31720

; <label>:166                                     ; preds = %161
  %167 = load i8*, i8** @optarg, align 8, !dbg !31721, !tbaa !31456
  %168 = call i32 @ascii_strcasecmp(i8* %167, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0)) #5, !dbg !31723
  %169 = icmp eq i32 %168, 0, !dbg !31724
  br i1 %169, label %170, label %171, !dbg !31725

; <label>:170                                     ; preds = %166
  store i32 2, i32* @Qflag, align 4, !dbg !31726, !tbaa !31493
  br label %.backedge.backedge, !dbg !31727

; <label>:171                                     ; preds = %166
  %172 = load i8*, i8** @optarg, align 8, !dbg !31728, !tbaa !31456
  %173 = call i32 @ascii_strcasecmp(i8* %172, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0)) #5, !dbg !31730
  %174 = icmp eq i32 %173, 0, !dbg !31731
  br i1 %174, label %175, label %176, !dbg !31732

; <label>:175                                     ; preds = %171
  store i32 0, i32* @Qflag, align 4, !dbg !31733, !tbaa !31493
  br label %.backedge.backedge

; <label>:176                                     ; preds = %171
  %177 = load i8*, i8** @optarg, align 8, !dbg !31734, !tbaa !31456
  call void (i8*, ...) @error(i8* nonnull getelementptr inbounds ([31 x i8], [31 x i8]* @.str.14, i64 0, i64 0), i8* %177) #16, !dbg !31735
  unreachable, !dbg !31735

; <label>:178                                     ; preds = %.backedge
  %179 = load i8*, i8** @optarg, align 8, !dbg !31736, !tbaa !31456
  call void @llvm.dbg.value(metadata i8* %179, i64 0, metadata !252, metadata !31447), !dbg !31527
  br label %.backedge.backedge, !dbg !31737

; <label>:180                                     ; preds = %.backedge
  %181 = load i8*, i8** @optarg, align 8, !dbg !31738, !tbaa !31456
  call void @llvm.dbg.value(metadata i8** %end, i64 0, metadata !291, metadata !31470), !dbg !31739
  %182 = call i64 @strtol(i8* %181, i8** nonnull %end, i32 0) #5, !dbg !31740
  %183 = trunc i64 %182 to i32, !dbg !31740
  store i32 %183, i32* %13, align 4, !dbg !31741, !tbaa !31522
  %184 = load i8*, i8** @optarg, align 8, !dbg !31742, !tbaa !31456
  %185 = load i8*, i8** %end, align 8, !dbg !31744, !tbaa !31456
  call void @llvm.dbg.value(metadata i8* %185, i64 0, metadata !291, metadata !31447), !dbg !31739
  %186 = icmp eq i8* %184, %185, !dbg !31745
  br i1 %186, label %192, label %187, !dbg !31746

; <label>:187                                     ; preds = %180
  %188 = load i8, i8* %185, align 1, !dbg !31747, !tbaa !31749
  %189 = icmp ne i8 %188, 0, !dbg !31750
  %190 = icmp ugt i32 %183, 262144, !dbg !31751
  %191 = or i1 %190, %189, !dbg !31751
  br i1 %191, label %192, label %193, !dbg !31751

; <label>:192                                     ; preds = %187, %180
  %.lcssa1061 = phi i8* [ %184, %187 ]
  call void (i8*, ...) @error(i8* nonnull getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0), i8* %.lcssa1061) #16, !dbg !31752
  unreachable, !dbg !31752

; <label>:193                                     ; preds = %187
  %194 = icmp eq i32 %183, 0, !dbg !31753
  br i1 %194, label %195, label %.backedge.backedge, !dbg !31755

; <label>:195                                     ; preds = %193
  store i32 262144, i32* %13, align 4, !dbg !31756, !tbaa !31522
  br label %.backedge.backedge, !dbg !31757

; <label>:196                                     ; preds = %.backedge
  %197 = load i32, i32* %35, align 4, !dbg !31758, !tbaa !31759
  %198 = add nsw i32 %197, 1, !dbg !31758
  store i32 %198, i32* %35, align 4, !dbg !31758, !tbaa !31759
  br label %.backedge.backedge, !dbg !31760

; <label>:199                                     ; preds = %.backedge
  %200 = load i32, i32* %36, align 8, !dbg !31761, !tbaa !31762
  %201 = add nsw i32 %200, 1, !dbg !31761
  store i32 %201, i32* %36, align 8, !dbg !31761, !tbaa !31762
  br label %.backedge.backedge, !dbg !31763

; <label>:202                                     ; preds = %.backedge
  %203 = load i8*, i8** @optarg, align 8, !dbg !31764, !tbaa !31456
  %204 = call i32 @ascii_strcasecmp(i8* %203, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0)) #5, !dbg !31765
  %205 = icmp eq i32 %204, 0, !dbg !31766
  br i1 %205, label %206, label %207, !dbg !31767

; <label>:206                                     ; preds = %202
  store i32 1, i32* %37, align 8, !dbg !31768, !tbaa !31769
  br label %.backedge.backedge, !dbg !31770

; <label>:207                                     ; preds = %202
  %208 = load i8*, i8** @optarg, align 8, !dbg !31771, !tbaa !31456
  %209 = call i32 @ascii_strcasecmp(i8* %208, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0)) #5, !dbg !31773
  %210 = icmp eq i32 %209, 0, !dbg !31774
  br i1 %210, label %211, label %212, !dbg !31775

; <label>:211                                     ; preds = %207
  store i32 2, i32* %37, align 8, !dbg !31776, !tbaa !31769
  br label %.backedge.backedge, !dbg !31777

; <label>:212                                     ; preds = %207
  %213 = load i8*, i8** @optarg, align 8, !dbg !31778, !tbaa !31456
  %214 = call i32 @ascii_strcasecmp(i8* %213, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0)) #5, !dbg !31780
  %215 = icmp eq i32 %214, 0, !dbg !31781
  br i1 %215, label %216, label %217, !dbg !31782

; <label>:216                                     ; preds = %212
  store i32 3, i32* %37, align 8, !dbg !31783, !tbaa !31769
  br label %.backedge.backedge, !dbg !31784

; <label>:217                                     ; preds = %212
  %218 = load i8*, i8** @optarg, align 8, !dbg !31785, !tbaa !31456
  %219 = call i32 @ascii_strcasecmp(i8* %218, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0)) #5, !dbg !31787
  %220 = icmp eq i32 %219, 0, !dbg !31788
  br i1 %220, label %221, label %222, !dbg !31789

; <label>:221                                     ; preds = %217
  store i32 4, i32* %37, align 8, !dbg !31790, !tbaa !31769
  br label %.backedge.backedge, !dbg !31791

; <label>:222                                     ; preds = %217
  %223 = load i8*, i8** @optarg, align 8, !dbg !31792, !tbaa !31456
  %224 = call i32 @ascii_strcasecmp(i8* %223, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0)) #5, !dbg !31794
  %225 = icmp eq i32 %224, 0, !dbg !31795
  br i1 %225, label %226, label %227, !dbg !31796

; <label>:226                                     ; preds = %222
  store i32 5, i32* %37, align 8, !dbg !31797, !tbaa !31769
  br label %.backedge.backedge, !dbg !31798

; <label>:227                                     ; preds = %222
  %228 = load i8*, i8** @optarg, align 8, !dbg !31799, !tbaa !31456
  %229 = call i32 @ascii_strcasecmp(i8* %228, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0)) #5, !dbg !31801
  %230 = icmp eq i32 %229, 0, !dbg !31802
  br i1 %230, label %231, label %232, !dbg !31803

; <label>:231                                     ; preds = %227
  store i32 6, i32* %37, align 8, !dbg !31804, !tbaa !31769
  br label %.backedge.backedge, !dbg !31805

; <label>:232                                     ; preds = %227
  %233 = load i8*, i8** @optarg, align 8, !dbg !31806, !tbaa !31456
  %234 = call i32 @ascii_strcasecmp(i8* %233, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0)) #5, !dbg !31808
  %235 = icmp eq i32 %234, 0, !dbg !31809
  br i1 %235, label %236, label %237, !dbg !31810

; <label>:236                                     ; preds = %232
  store i32 7, i32* %37, align 8, !dbg !31811, !tbaa !31769
  br label %.backedge.backedge, !dbg !31812

; <label>:237                                     ; preds = %232
  %238 = load i8*, i8** @optarg, align 8, !dbg !31813, !tbaa !31456
  %239 = call i32 @ascii_strcasecmp(i8* %238, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0)) #5, !dbg !31815
  %240 = icmp eq i32 %239, 0, !dbg !31816
  br i1 %240, label %241, label %242, !dbg !31817

; <label>:241                                     ; preds = %237
  store i32 8, i32* %37, align 8, !dbg !31818, !tbaa !31769
  br label %.backedge.backedge, !dbg !31819

; <label>:242                                     ; preds = %237
  %243 = load i8*, i8** @optarg, align 8, !dbg !31820, !tbaa !31456
  %244 = call i32 @ascii_strcasecmp(i8* %243, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0)) #5, !dbg !31822
  %245 = icmp eq i32 %244, 0, !dbg !31823
  br i1 %245, label %246, label %247, !dbg !31824

; <label>:246                                     ; preds = %242
  store i32 9, i32* %37, align 8, !dbg !31825, !tbaa !31769
  br label %.backedge.backedge, !dbg !31826

; <label>:247                                     ; preds = %242
  %248 = load i8*, i8** @optarg, align 8, !dbg !31827, !tbaa !31456
  %249 = call i32 @ascii_strcasecmp(i8* %248, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0)) #5, !dbg !31829
  %250 = icmp eq i32 %249, 0, !dbg !31830
  br i1 %250, label %251, label %252, !dbg !31831

; <label>:251                                     ; preds = %247
  store i32 10, i32* %37, align 8, !dbg !31832, !tbaa !31769
  br label %.backedge.backedge, !dbg !31833

; <label>:252                                     ; preds = %247
  %253 = load i8*, i8** @optarg, align 8, !dbg !31834, !tbaa !31456
  %254 = call i32 @ascii_strcasecmp(i8* %253, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0)) #5, !dbg !31836
  %255 = icmp eq i32 %254, 0, !dbg !31837
  br i1 %255, label %256, label %257, !dbg !31838

; <label>:256                                     ; preds = %252
  store i32 11, i32* %37, align 8, !dbg !31839, !tbaa !31769
  br label %.backedge.backedge, !dbg !31840

; <label>:257                                     ; preds = %252
  %258 = load i8*, i8** @optarg, align 8, !dbg !31841, !tbaa !31456
  %259 = call i32 @ascii_strcasecmp(i8* %258, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0)) #5, !dbg !31843
  %260 = icmp eq i32 %259, 0, !dbg !31844
  br i1 %260, label %261, label %262, !dbg !31845

; <label>:261                                     ; preds = %257
  store i32 12, i32* %37, align 8, !dbg !31846, !tbaa !31769
  br label %.backedge.backedge, !dbg !31847

; <label>:262                                     ; preds = %257
  %263 = load i8*, i8** @optarg, align 8, !dbg !31848, !tbaa !31456
  %264 = call i32 @ascii_strcasecmp(i8* %263, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0)) #5, !dbg !31850
  %265 = icmp eq i32 %264, 0, !dbg !31851
  br i1 %265, label %266, label %267, !dbg !31852

; <label>:266                                     ; preds = %262
  store i32 13, i32* %37, align 8, !dbg !31853, !tbaa !31769
  br label %.backedge.backedge, !dbg !31854

; <label>:267                                     ; preds = %262
  %268 = load i8*, i8** @optarg, align 8, !dbg !31855, !tbaa !31456
  %269 = call i32 @ascii_strcasecmp(i8* %268, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0)) #5, !dbg !31857
  %270 = icmp eq i32 %269, 0, !dbg !31858
  br i1 %270, label %271, label %272, !dbg !31859

; <label>:271                                     ; preds = %267
  store i32 14, i32* %37, align 8, !dbg !31860, !tbaa !31769
  br label %.backedge.backedge, !dbg !31861

; <label>:272                                     ; preds = %267
  %273 = load i8*, i8** @optarg, align 8, !dbg !31862, !tbaa !31456
  %274 = call i32 @ascii_strcasecmp(i8* %273, i8* nonnull getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0)) #5, !dbg !31864
  %275 = icmp eq i32 %274, 0, !dbg !31865
  br i1 %275, label %276, label %277, !dbg !31866

; <label>:276                                     ; preds = %272
  store i32 15, i32* %37, align 8, !dbg !31867, !tbaa !31769
  br label %.backedge.backedge, !dbg !31868

; <label>:277                                     ; preds = %272
  %278 = load i8*, i8** @optarg, align 8, !dbg !31869, !tbaa !31456
  %279 = call i32 @ascii_strcasecmp(i8* %278, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0)) #5, !dbg !31871
  %280 = icmp eq i32 %279, 0, !dbg !31872
  br i1 %280, label %281, label %282, !dbg !31873

; <label>:281                                     ; preds = %277
  store i32 16, i32* %37, align 8, !dbg !31874, !tbaa !31769
  br label %.backedge.backedge, !dbg !31875

; <label>:282                                     ; preds = %277
  %283 = load i8*, i8** @optarg, align 8, !dbg !31876, !tbaa !31456
  %284 = call i32 @ascii_strcasecmp(i8* %283, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0)) #5, !dbg !31878
  %285 = icmp eq i32 %284, 0, !dbg !31879
  br i1 %285, label %286, label %287, !dbg !31880

; <label>:286                                     ; preds = %282
  store i32 17, i32* %37, align 8, !dbg !31881, !tbaa !31769
  br label %.backedge.backedge

; <label>:287                                     ; preds = %282
  %288 = load i8*, i8** @optarg, align 8, !dbg !31882, !tbaa !31456
  call void (i8*, ...) @error(i8* nonnull getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0), i8* %288) #16, !dbg !31883
  unreachable, !dbg !31883

; <label>:289                                     ; preds = %.backedge
  %290 = load i32, i32* %38, align 4, !dbg !31884, !tbaa !31885
  %291 = add nsw i32 %290, 1, !dbg !31884
  store i32 %291, i32* %38, align 4, !dbg !31884, !tbaa !31885
  br label %.backedge.backedge, !dbg !31886

; <label>:292                                     ; preds = %.backedge
  %293 = load i32, i32* @Uflag, align 4, !dbg !31887, !tbaa !31493
  %294 = add nsw i32 %293, 1, !dbg !31887
  store i32 %294, i32* @Uflag, align 4, !dbg !31887, !tbaa !31493
  br label %.backedge.backedge, !dbg !31888

; <label>:295                                     ; preds = %.backedge
  %296 = load i32, i32* %39, align 8, !dbg !31889, !tbaa !31890
  %297 = add nsw i32 %296, 1, !dbg !31889
  store i32 %297, i32* %39, align 8, !dbg !31889, !tbaa !31890
  br label %.backedge.backedge, !dbg !31891

; <label>:298                                     ; preds = %.backedge
  %299 = load i8*, i8** @optarg, align 8, !dbg !31892, !tbaa !31456
  call void @llvm.dbg.value(metadata i8* %299, i64 0, metadata !253, metadata !31447), !dbg !31528
  br label %.backedge.backedge, !dbg !31893

; <label>:300                                     ; preds = %.backedge
  %301 = load i8*, i8** @optarg, align 8, !dbg !31894, !tbaa !31456
  call void @llvm.dbg.value(metadata i8* %301, i64 0, metadata !254, metadata !31447), !dbg !31530
  br label %.backedge.backedge, !dbg !31895

; <label>:302                                     ; preds = %.backedge
  %303 = load i8*, i8** @optarg, align 8, !dbg !31896, !tbaa !31456
  call void @llvm.dbg.value(metadata i8* %303, i64 0, metadata !419, metadata !31447) #5, !dbg !31897
  %304 = call i64 @strtol(i8* nocapture nonnull %303, i8** null, i32 10) #5, !dbg !31899
  %305 = trunc i64 %304 to i32, !dbg !31900
  store i32 %305, i32* @Wflag, align 4, !dbg !31901, !tbaa !31493
  %306 = icmp slt i32 %305, 1, !dbg !31902
  br i1 %306, label %307, label %309, !dbg !31904

; <label>:307                                     ; preds = %302
  %308 = load i8*, i8** @optarg, align 8, !dbg !31905, !tbaa !31456
  call void (i8*, ...) @error(i8* nonnull getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0), i8* %308) #16, !dbg !31906
  unreachable, !dbg !31906

; <label>:309                                     ; preds = %302
  tail call void @llvm.dbg.value(metadata i32 %305, i64 0, metadata !431, metadata !31447), !dbg !31907
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !432, metadata !31447), !dbg !31909
  %310 = icmp sgt i32 %305, 1, !dbg !31910
  br i1 %310, label %.lr.ph.preheader.i, label %getWflagChars.exit, !dbg !31912

.lr.ph.preheader.i:                               ; preds = %309
  %311 = add nsw i32 %305, -1, !dbg !31913
  br label %.lr.ph.i, !dbg !31914

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.preheader.i
  %c.02.i = phi i32 [ %312, %.lr.ph.i ], !dbg !31916
  %.01.i = phi i32 [ %313, %.lr.ph.i ], !dbg !31916
  %312 = add nuw nsw i32 %c.02.i, 1, !dbg !31914
  tail call void @llvm.dbg.value(metadata i32 %312, i64 0, metadata !432, metadata !31447), !dbg !31909
  %313 = sdiv i32 %.01.i, 10, !dbg !31917
  tail call void @llvm.dbg.value(metadata i32 %313, i64 0, metadata !431, metadata !31447), !dbg !31907
  %314 = icmp sgt i32 %.01.i, 9, !dbg !31910
  br i1 %314, label %.lr.ph.i, label %getWflagChars.exit.loopexit, !dbg !31912

getWflagChars.exit.loopexit:                      ; preds = %.lr.ph.i
  %.lcssa899 = phi i32 [ %312, %.lr.ph.i ]
  br label %getWflagChars.exit, !dbg !31918

getWflagChars.exit:                               ; preds = %getWflagChars.exit.loopexit, %309
  %c.0.lcssa.i = phi i32 [ %.lcssa899, %getWflagChars.exit.loopexit ], !dbg !31916
  store i32 %c.0.lcssa.i, i32* @WflagChars, align 4, !dbg !31918, !tbaa !31493
  br label %.backedge.backedge, !dbg !31919

; <label>:315                                     ; preds = %.backedge
  %316 = load i32, i32* %40, align 4, !dbg !31920, !tbaa !31921
  %317 = add nsw i32 %316, 1, !dbg !31920
  store i32 %317, i32* %40, align 4, !dbg !31920, !tbaa !31921
  %318 = load i32, i32* %34, align 8, !dbg !31922, !tbaa !31712
  %319 = add nsw i32 %318, 1, !dbg !31922
  store i32 %319, i32* %34, align 8, !dbg !31922, !tbaa !31712
  br label %.backedge.backedge, !dbg !31923

; <label>:320                                     ; preds = %.backedge
  %321 = load i32, i32* %41, align 8, !dbg !31924, !tbaa !31925
  %322 = add nsw i32 %321, 1, !dbg !31924
  store i32 %322, i32* %41, align 8, !dbg !31924, !tbaa !31925
  %323 = load i32, i32* %34, align 8, !dbg !31926, !tbaa !31712
  %324 = add nsw i32 %323, 1, !dbg !31926
  store i32 %324, i32* %34, align 8, !dbg !31926, !tbaa !31712
  br label %.backedge.backedge, !dbg !31927

; <label>:325                                     ; preds = %.backedge
  %326 = load i8*, i8** @optarg, align 8, !dbg !31928, !tbaa !31456
  call void @llvm.dbg.value(metadata i8* %326, i64 0, metadata !382, metadata !31447), !dbg !31511
  %327 = call i32 @pcap_datalink_name_to_val(i8* %326) #5, !dbg !31929
  call void @llvm.dbg.value(metadata i32 %327, i64 0, metadata !381, metadata !31447), !dbg !31510
  %328 = icmp slt i32 %327, 0, !dbg !31930
  br i1 %328, label %329, label %.backedge.backedge, !dbg !31932

.backedge.backedge:                               ; preds = %325, %206, %216, %226, %236, %246, %256, %266, %276, %286, %281, %271, %261, %251, %241, %231, %221, %211, %195, %193, %165, %175, %170, %137, %132, %115, %99, %65, %59, %51, %344, %334, %332, %330, %320, %315, %getWflagChars.exit, %300, %298, %295, %292, %289, %199, %196, %178, %156, %153, %152, %149, %146, %144, %126, %124, %121, %112, %110, %107, %90, %87, %85, %82, %79, %76, %73, %48, %45, %.backedge, %tstamp_precision_from_string.exit.thread
  %WFileName.0.be = phi i8* [ %WFileName.0, %110 ]
  %VFileName.0.be = phi i8* [ %VFileName.0, %110 ]
  %username.0.be = phi i8* [ %username.0, %110 ]
  %RFileName.0.be = phi i8* [ %RFileName.0, %110 ]
  %device.0.be = phi i8* [ %111, %110 ]
  %Oflag.0.be = phi i32 [ %Oflag.0, %110 ]
  %yflag_dlt.0.be = phi i32 [ %yflag_dlt.0, %110 ]
  %yflag_dlt_name.0.be = phi i8* [ %yflag_dlt_name.0, %110 ]
  %infile.0.be = phi i8* [ %infile.0, %110 ]
  %cnt.0.be = phi i32 [ %cnt.0, %110 ]
  br label %.backedge, !dbg !31570

; <label>:329                                     ; preds = %325
  %.lcssa1060 = phi i8* [ %326, %325 ]
  call void (i8*, ...) @error(i8* nonnull getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i64 0, i64 0), i8* %.lcssa1060) #16, !dbg !31933
  unreachable, !dbg !31933

; <label>:330                                     ; preds = %.backedge
  %331 = load i64, i64* bitcast (i8** @optarg to i64*), align 8, !dbg !31934, !tbaa !31456
  store i64 %331, i64* bitcast (i8** @zflag to i64*), align 8, !dbg !31935, !tbaa !31456
  br label %.backedge.backedge, !dbg !31936

; <label>:332                                     ; preds = %.backedge
  %333 = load i8*, i8** @optarg, align 8, !dbg !31937, !tbaa !31456
  call void @llvm.dbg.value(metadata i8* %333, i64 0, metadata !288, metadata !31447), !dbg !31504
  br label %.backedge.backedge, !dbg !31938

; <label>:334                                     ; preds = %.backedge
  store i32 1, i32* %42, align 4, !dbg !31939, !tbaa !31940
  br label %.backedge.backedge, !dbg !31941

; <label>:335                                     ; preds = %.backedge
  call fastcc void @print_version(), !dbg !31942
  call fastcc void @exit_tcpdump(i32 0) #16, !dbg !31943
  unreachable, !dbg !31943

; <label>:336                                     ; preds = %.backedge
  %337 = load i8*, i8** @optarg, align 8, !dbg !31944, !tbaa !31456
  call void @llvm.dbg.value(metadata i8* %337, i64 0, metadata !435, metadata !31447) #5, !dbg !31945
  %338 = call i32 @strncmp(i8* %337, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0), i64 4) #15, !dbg !31947
  %339 = icmp eq i32 %338, 0, !dbg !31949
  br i1 %339, label %tstamp_precision_from_string.exit.thread, label %340, !dbg !31950

; <label>:340                                     ; preds = %336
  %341 = call i32 @strncmp(i8* %337, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), i64 5) #15, !dbg !31951
  %342 = icmp eq i32 %341, 0, !dbg !31953
  br i1 %342, label %tstamp_precision_from_string.exit.thread, label %343

tstamp_precision_from_string.exit.thread:         ; preds = %336, %340
  %.0.i.ph = phi i32 [ 0, %340 ]
  store i32 %.0.i.ph, i32* %43, align 4, !dbg !31954, !tbaa !31955
  br label %.backedge.backedge, !dbg !31956

; <label>:343                                     ; preds = %340
  store i32 -22, i32* %43, align 4, !dbg !31954, !tbaa !31955
  call void (i8*, ...) @error(i8* nonnull getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36, i64 0, i64 0)) #16, !dbg !31957
  unreachable, !dbg !31957

; <label>:344                                     ; preds = %.backedge
  store i1 true, i1* @immediate_mode, align 1
  br label %.backedge.backedge, !dbg !31959

; <label>:345                                     ; preds = %.backedge
  call fastcc void @print_usage(), !dbg !31960
  call fastcc void @exit_tcpdump(i32 1) #16, !dbg !31961
  unreachable, !dbg !31961

; <label>:346                                     ; preds = %.backedge
  %cnt.0.lcssa1044 = phi i32 [ %cnt.0, %.backedge ]
  %infile.0.lcssa1028 = phi i8* [ %infile.0, %.backedge ]
  %yflag_dlt_name.0.lcssa1012 = phi i8* [ %yflag_dlt_name.0, %.backedge ]
  %yflag_dlt.0.lcssa996 = phi i32 [ %yflag_dlt.0, %.backedge ]
  %Oflag.0.lcssa980 = phi i32 [ %Oflag.0, %.backedge ]
  %device.0.lcssa964 = phi i8* [ %device.0, %.backedge ]
  %RFileName.0.lcssa948 = phi i8* [ %RFileName.0, %.backedge ]
  %username.0.lcssa932 = phi i8* [ %username.0, %.backedge ]
  %VFileName.0.lcssa916 = phi i8* [ %VFileName.0, %.backedge ]
  %WFileName.0.lcssa900 = phi i8* [ %WFileName.0, %.backedge ]
  %347 = load i32, i32* @Dflag, align 4, !dbg !31962, !tbaa !31493
  %348 = icmp eq i32 %347, 0, !dbg !31962
  br label %373

.preheader.i:                                     ; No predecessors!
  %dev.01.i = load %struct.pcap_if*, %struct.pcap_if** %devlist.i, align 8, !dbg !31963, !tbaa !31456
  %349 = icmp eq %struct.pcap_if* %dev.01.i, null, !dbg !31965
  br i1 %349, label %._crit_edge.i, label %.lr.ph.i19.preheader, !dbg !31968

.lr.ph.i19.preheader:                             ; preds = %.preheader.i
  br label %.lr.ph.i19, !dbg !31969
                                                  ; No predecessors!
  call void (i8*, ...) @error(i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), 